{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ca",
				"canGoUp	bool"
			],
			[
				"cango",
				"canGoLeft	bool"
			],
			[
				"World",
				"WorldData	class"
			],
			[
				"Font",
				"FontManager	typedef"
			],
			[
				"Texture",
				"TextureManager	typedef"
			],
			[
				"u",
				"u_short	typedef"
			],
			[
				"Textu",
				"TextureManager	typedef"
			],
			[
				"sho",
				"u_short	typedef"
			],
			[
				"as",
				"asMilliseconds() const	Int32"
			],
			[
				"asMi",
				"asMilliseconds() const	Int32"
			],
			[
				"getS",
				"getString() const	const sf::String &"
			],
			[
				"det",
				"deltaT	sf::Time"
			],
			[
				"getText",
				"getTexture() const	const sf::Texture *"
			],
			[
				"Stat",
				"StateID	enum"
			],
			[
				"req",
				"requestStackPush(StateID state)	void"
			],
			[
				"set",
				"setAction(Action action)	void"
			],
			[
				"c",
				"c_str() const	const _CharT *"
			],
			[
				"d",
				"draw(const sf::Drawable &drawable)	void"
			],
			[
				"Bu",
				"ButtonSprite"
			],
			[
				"bt",
				"btowc(int __c)	wint_t"
			],
			[
				"con",
				"getContext() const	State::Context"
			],
			[
				"B",
				"ButtonSprite"
			],
			[
				"se",
				"selected	sf::IntRect"
			],
			[
				"b",
				"btnHeight	const int"
			],
			[
				"btn",
				"btnWidth	const int"
			],
			[
				"no",
				"normalTex	const sf::Texture &"
			],
			[
				"isSe",
				"isSelected() const	bool"
			],
			[
				"setText",
				"GameObject::setTextureRect(sf::IntRect rect)	void"
			],
			[
				"pla",
				"player	Player"
			],
			[
				"text",
				"textCh	char[]"
			],
			[
				"te",
				"textCh	char[]"
			],
			[
				"get",
				"getCenter() const	const Vector2f &"
			],
			[
				"tli",
				"tileSize	int"
			],
			[
				"ge",
				"getSize()	sf::Vector2i"
			],
			[
				"ve",
				"velocity	sf::Vector2f"
			],
			[
				"getL",
				"getLocalBounds() const	FloatRect"
			],
			[
				"play",
				"player	Player"
			],
			[
				"tex",
				"texRect	sf::IntRect"
			],
			[
				"pl",
				"playerSpeed	float"
			],
			[
				"run",
				"runFactor	const float"
			],
			[
				"log_",
				"log_info(M, ...)	macro"
			],
			[
				"vect",
				"Vector2i	typedef"
			],
			[
				"a",
				"amount	int"
			],
			[
				"setS",
				"setString(const sf::String &string)	void"
			],
			[
				"bo",
				"bounds	sf::FloatRect"
			],
			[
				"sele",
				"selectedTex	const sf::Texture &"
			],
			[
				"selec",
				"selected	bool"
			],
			[
				"Ti",
				"TitleState	class"
			],
			[
				"s",
				"startGame()	void"
			],
			[
				"start",
				"startBtn	Button"
			],
			[
				"player",
				"playerSpeed	int"
			],
			[
				"isIn",
				"isInRange(GameObject &obj)	bool"
			],
			[
				"mo",
				"moveDown()	void"
			],
			[
				"move",
				"moveUp()	void"
			],
			[
				"F",
				"FloatRect	typedef"
			],
			[
				"pro",
				"projectionY	sf::FloatRect"
			],
			[
				"pr",
				"projectionX	sf::FloatRect"
			],
			[
				"co",
				"intersects(const Rect<float> &rectangle) const	bool"
			],
			[
				"p",
				"playerPosition	sf::Vector2<float>"
			],
			[
				"Rec",
				"IntRect	typedef"
			],
			[
				"canMove",
				"canMoveLeft	bool"
			],
			[
				"can",
				"canMoveDown	bool"
			],
			[
				"r",
				"right()	int"
			],
			[
				"canM",
				"canMoveLeft	bool"
			],
			[
				"t",
				"top()	int"
			],
			[
				"playe",
				"playerSpeed	int"
			],
			[
				"in",
				"inRight	bool"
			],
			[
				"ob",
				"obj	GameObject &"
			],
			[
				"getTe",
				"Sprite::getTextureRect() const	const IntRect &"
			],
			[
				"cha",
				"checkCollision(sf::IntRect a, sf::IntRect b)	bool"
			],
			[
				"Int",
				"IntRect	typedef"
			],
			[
				"Game",
				"GameObject	class"
			],
			[
				"setCe",
				"setCenter(const Vector2f &center)	void"
			],
			[
				"setT",
				"setTexture(const sf::Texture &texture)	void"
			],
			[
				"setV",
				"setView(const sf::View &view)	void"
			],
			[
				"vs",
				"Window::setVerticalSyncEnabled(bool enabled)	void"
			],
			[
				"geTR",
				"getTextureRect() const	const IntRect &"
			],
			[
				"Ve",
				"Vector2i	typedef"
			],
			[
				"L",
				"getLocalBounds() const	FloatRect"
			],
			[
				"setTex",
				"setTextureRect(const IntRect &rectangle)	void"
			],
			[
				"textu",
				"textureRect	sf::IntRect"
			],
			[
				"setPos",
				"Transformable::setPosition(float x, float y)	void"
			],
			[
				"Zone",
				"ZoneData	class"
			],
			[
				"de",
				"destination	std::vector<std::vector<int>> &"
			],
			[
				"err",
				"errMsg	std::string"
			],
			[
				"js",
				"jsonCollidables	Json::Value"
			],
			[
				"che",
				"check(A, M)	macro"
			],
			[
				"map",
				"mapRow	std::vector<int>"
			],
			[
				"ma",
				"map	std::vector<std::vector<int> >"
			],
			[
				"St",
				"Style	namespace"
			],
			[
				"center",
				"setCenter(const Vector2f &center)	void"
			],
			[
				"tile",
				"tileSheetSize	sf::Vector2u"
			],
			[
				"tileS",
				"tileSize	int"
			],
			[
				"dra",
				"drawOffset	int"
			],
			[
				"til",
				"tilePos	auto"
			],
			[
				"In",
				"IntRect	typedef"
			],
			[
				"Level",
				"LevelData	class"
			],
			[
				"log",
				"log_info(M, ...)	macro"
			],
			[
				"Leve",
				"LevelSheet"
			],
			[
				"Resour",
				"ResourceManager"
			],
			[
				"res",
				"resources	std::map<std::string, std::unique_ptr<Resource> >"
			],
			[
				"qua",
				"qualche"
			],
			[
				"doc",
				"docRoot〔variable〕"
			],
			[
				"chil",
				"child"
			],
			[
				"area",
				"areaSpan〔variable〕"
			],
			[
				"val",
				"value"
			],
			[
				"inl",
				"inline-block"
			],
			[
				"hei",
				"height: 〔property〕"
			],
			[
				"tea",
				"text-align"
			],
			[
				"mysql_fetch_",
				"mysql_fetch_assoc"
			],
			[
				"Speci",
				"Specifica"
			],
			[
				"imple",
				"implementazione"
			],
			[
				"sotto",
				"sottosistemi"
			],
			[
				"comunica",
				"comunicazione"
			],
			[
				"comportame",
				"comportamento"
			],
			[
				"Diag",
				"Diagrammi"
			],
			[
				"compo",
				"comportamento"
			],
			[
				"svi",
				"sviluppo"
			],
			[
				"for",
				"foreach	foreach …"
			],
			[
				"mys",
				"mysqli_"
			],
			[
				"conne",
				"connect_errno〔variable〕"
			],
			[
				"ho",
				"host_info	struct hostent *"
			],
			[
				"EOL",
				"EOL_SIZE	macro"
			],
			[
				"ui",
				"u_int	typedef"
			],
			[
				"E",
				"ETH_ADDR_LEN	macro"
			],
			[
				"LIBNETCP",
				"LIBNET_TCP_H	macro"
			],
			[
				"libnet_build_tcp",
				"libnet_build_tcp(uint16_t sp, uint16_t dp, uint32_t seq, uint32_t ack, uint8_t control, uint16_t win, uint16_t sum, uint16_t urg, uint16_t len, const uint8_t *payload, uint32_t payload_s, libnet_t *l, libnet_ptag_t ptag)	libnet_ptag_t"
			],
			[
				"TCh",
				"TCPhdr	struct libnet_tcp_hdr *"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/World.cpp",
			"settings":
			{
				"buffer_size": 4340,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Player.hpp",
			"settings":
			{
				"buffer_size": 1002,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Player.cpp",
			"settings":
			{
				"buffer_size": 4541,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"file": "include/Entity.hpp",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/World.hpp",
			"settings":
			{
				"buffer_size": 1122,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/CompileSH.sublime-build",
	"command_palette":
	{
		"height": 371.0,
		"selected_items":
		[
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"r",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Advanced Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Set Syntax: ActionScript"
			],
			[
				"buil",
				"Build: Build"
			],
			[
				"colo",
				"Color Picker"
			],
			[
				"them",
				"Themr: List themes"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"the",
				"Themr: List themes"
			],
			[
				"t",
				"Themr: List themes"
			],
			[
				"i",
				"Package Control: Install Package"
			],
			[
				"theme",
				"Themr: Next theme"
			],
			[
				"themr",
				"Themr: List themes"
			],
			[
				"th",
				"Themr: List themes"
			],
			[
				"INS",
				"Package Control: Install Package"
			],
			[
				"package con",
				"Package Control: List Packages"
			],
			[
				"too",
				"TodoReview: Open Files"
			],
			[
				"todo",
				"TodoReview: Project Files"
			],
			[
				"run",
				"Build: Run"
			],
			[
				"sublimegd",
				"Preferences: SublimeGDB Settings – User"
			],
			[
				"sublime g",
				"Preferences: SublimeGDB Settings – Default"
			],
			[
				"sublimegdb user",
				"Preferences: SublimeGDB Settings – User"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"qui",
				"QuickThemes: next"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"pre",
				"Markdown Preview: Preview in Browser"
			],
			[
				"prev",
				"Markdown Preview: Preview in Browser"
			],
			[
				"previewin",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markdown pre",
				"Markdown Preview: Preview in Browser"
			],
			[
				"php",
				"Set Syntax: PHP"
			]
		],
		"width": 529.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/ghzmdr/Workspace/ENGINE2D",
		"/home/ghzmdr/Workspace/ENGINE2D/include",
		"/home/ghzmdr/Workspace/ENGINE2D/src",
		"/home/ghzmdr/Workspace/ENGINE2D/src/States"
	],
	"file_history":
	[
		"/home/ghzmdr/Workspace/ENGINE2D/src/Player.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/GameObject.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/Player.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/States/GameState.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/World.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/src/States/GameState.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/src/States/State.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/States/StateStack.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/src/Application.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/src/WorldData.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/src/States/TitleState.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/States/State.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/Application.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/Resource/Resources.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/src/World.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/src/States/StateStack.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/data/zone.json",
		"/home/ghzmdr/Workspace/ENGINE2D/include/Resource/ResourceManager.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/src/GUI/Button.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/GUI/Button.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/Utils/Utility.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/States/TitleState.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/GUI/Component.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/fnt",
		"/home/ghzmdr/.config/plank/dock1/settings",
		"/home/ghzmdr/Workspace/ENGINE2D/compile.sh",
		"/home/ghzmdr/Workspace/C++/Games/AirStrike/examples/06_Menus/Source/Button.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/Utils/Utility.hpp",
		"/home/ghzmdr/Workspace/C++/Games/AirStrike/examples/06_Menus/Source/Component.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/src/GUI/Component.cpp",
		"/home/ghzmdr/Workspace/C++/Games/AirStrike/examples/06_Menus/Include/Book/Button.hpp",
		"/home/ghzmdr/Workspace/C++/Games/AirStrike/examples/06_Menus/Include/Book/Component.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/States/StateID.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/src/States/include/c++/4.9.2/bits/unique_ptr.h",
		"/home/ghzmdr/.config/plank/dock1/launchers/aseprite.dockitem",
		"/home/ghzmdr/.config/plank/dock1/launchers/[PlankItemsDockItemPreferences]",
		"/home/ghzmdr/Desktop/senza titolo.tmx",
		"/home/ghzmdr/Workspace/ENGINE2D/include/WorldData.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/src/Zone.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/Zone.hpp",
		"/home/ghzmdr/Workspace/C++/SDL_Tutorials/27_collision_detection/27_collision_detection.cpp",
		"/home/ghzmdr/Dropbox/Workspace/SFML.wiki/Source:-Simple-Collision-Detection-for-SFML-2.md",
		"/home/ghzmdr/Workspace/ActionScript/Square'n'Rounds/assets/Level0/Bounds.csv",
		"/home/ghzmdr/Workspace/ActionScript/Square'n'Rounds/Square'n'Rounds.as3proj",
		"/home/ghzmdr/Workspace/ActionScript/Square'n'Rounds/src/LevelPrototype.txt",
		"/home/ghzmdr/.local/share/plank/themes/ArHU/dock.theme",
		"/home/ghzmdr/Workspace/ENGINE2D/main.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/ZoneData.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/img/player.png",
		"/home/ghzmdr/Workspace/ENGINE2D/src/ZoneData.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/Debug.h",
		"/home/ghzmdr/Workspace/ENGINE2D/img/levelTiles.png",
		"/home/ghzmdr/Workspace/ENGINE2D/zone.json",
		"/home/ghzmdr/Workspace/ENGINE2D/src/Level.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/LevelData.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/Level.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/include/ResourceManager.hpp",
		"/home/ghzmdr/Workspace/ENGINE2D/ENGINE2D.sublime-project",
		"/home/ghzmdr/.config/sublime-text-3/Packages/User/SublimeClang.sublime-settings",
		"/home/ghzmdr/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/ghzmdr/Workspace/ENGINE2D/bin/program.out",
		"/home/ghzmdr/.config/sublime-text-3/Packages/SublimeClang/SublimeClang.sublime-settings",
		"/home/ghzmdr/Scaricati/ENGINE2D(1).sublime-project",
		"/home/ghzmdr/Scaricati/ENGINE2D.sublime-project",
		"/home/ghzmdr/Workspace/ENGINE2D/src/Desrizione.md",
		"/home/ghzmdr/Desktop/nw-test/index.html",
		"/home/ghzmdr/Desktop/nw-test/package.json",
		"/home/ghzmdr/Desktop/nw-test/src/keystate.js",
		"/home/ghzmdr/Scaricati/aosp_hammerhead-ota-5.0.2_plus.zip",
		"/home/ghzmdr/Scaricati/com_spotify_music_2_2_0_636_tablet_signed.apk",
		"/home/ghzmdr/Workspace/ENGINE2D/include/SceneNode/SceneNode.hpp",
		"/home/ghzmdr/sandbox/CodeRedI_Payload",
		"/home/ghzmdr/.config/sublime-text-3/Packages/SublimeGDB/Default.sublime-keymap",
		"/home/ghzmdr/Dropbox/Workspace/ENGINE2D/src/Application.cpp",
		"/home/ghzmdr/Workspace/ENGINE2D/README.md",
		"/home/ghzmdr/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/ghzmdr/Workspace/ENGINE2D/ENGINE2D.sublime-workspace",
		"/home/ghzmdr/Desktop/untitled",
		"/home/ghzmdr/Desktop/ENGINE2D/include/States/StateStack.hpp",
		"/home/ghzmdr/Desktop/ENGINE2D/include/SceneNode/SceneNode.hpp",
		"/home/ghzmdr/Desktop/ENGINE2D/include/States/StateID.hpp",
		"/home/ghzmdr/Desktop/ENGINE2D/include/States/State.hpp",
		"/home/ghzmdr/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/ghzmdr/Desktop/ENGINE2D/src/SceneNode/SceneNode.cpp",
		"/home/ghzmdr/Desktop/ENGINE2D/include/States/GameState.hpp",
		"/home/ghzmdr/.config/sublime-text-3/Packages/Terminal/Default (Linux).sublime-keymap",
		"/home/ghzmdr/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/ghzmdr/Desktop/ENGINE2D/ENGINE2D.do",
		"/home/ghzmdr/.config/sublime-text-3/Packages/User/CompileSH.sublime-build",
		"/home/ghzmdr/Desktop/ENGINE2D/main.cpp",
		"/home/ghzmdr/Desktop/ENGINE2D/compile.sh",
		"/home/ghzmdr/Desktop/ENGINE2D/src/Application.cpp",
		"/home/ghzmdr/.config/sublime-text-3/Packages/User/compile.sublime-build",
		"/home/ghzmdr/.config/sublime-text-3/Packages/User/SublimeGDB.sublime-settings",
		"/home/ghzmdr/.config/sublime-text-3/Packages/SublimeGDB/SublimeGDB.sublime-settings",
		"/home/ghzmdr/Desktop/ENGINE2D/ENGINE2D.sublime-project",
		"/home/ghzmdr/Desktop/ENGINE2D/include/Debug.h",
		"/home/ghzmdr/Desktop/ENGINE2D/src/States/StateStack.cpp",
		"/home/ghzmdr/Desktop/ENGINE2D/README.md",
		"/home/ghzmdr/.codeintel/README.txt",
		"/home/ghzmdr/Desktop/ENGINE2D/src/States/GameState.cpp",
		"/home/ghzmdr/Desktop/ENGINE2D/a.out",
		"/home/ghzmdr/Desktop/ENGINE2D/src/States/State.cpp",
		"/home/ghzmdr/Desktop/ENGINE2D/include/Application.hpp",
		"/home/ghzmdr/Desktop/ENGINE2D/bin/program.out",
		"/home/ghzmdr/Desktop/ENGINE2D/ENGINE2D.cbp",
		"/home/ghzmdr/Desktop/ENGINE2D/ENGINE2D.depend",
		"/home/ghzmdr/Desktop/ENGINE2D/ENGINE2D.layout",
		"/home/ghzmdr/Desktop/ENGINE2D/include/Application.h",
		"/home/ghzmdr/Desktop/ENGINE2D/include/States/StateID.h",
		"/home/ghzmdr/Desktop/ENGINE2D/src/include/c++/4.9.2/bits/istream.tcc",
		"/home/ghzmdr/.config/sublime-text-3/Packages/User/C++11.sublime-settings",
		"/home/ghzmdr/.config/sublime-text-3/Packages/C++11/C++11.sublime-settings",
		"/usr/include/SFML/Config.hpp",
		"/usr/include/SFML/System/Err.hpp",
		"/home/ghzmdr/.config/sublime-text-3/Packages/C++11/messages/install.txt",
		"/home/ghzmdr/Workspace/C++/RECT2D/inc/Character.hpp",
		"/home/ghzmdr/Workspace/C++/RECT2D/src/SceneNode.cpp",
		"/home/ghzmdr/Workspace/C++/RECT2D/src/Application.cpp",
		"/home/ghzmdr/tools/src/debug.h",
		"/home/ghzmdr/Workspace/C++/RECT2D/inc/GameState.hpp",
		"/home/ghzmdr/Workspace/C++/RECT2D/src/GameState.cpp",
		"/home/ghzmdr/Desktop/lol/include/States/StateID.h",
		"/home/ghzmdr/Desktop/lol/include/Debug.h",
		"/home/ghzmdr/Desktop/lol/src/States/StateStack.cpp",
		"/home/ghzmdr/Desktop/lol/src/Application.cpp",
		"/home/ghzmdr/Desktop/lol/include/Application.h",
		"/home/ghzmdr/Desktop/lol/src/States/State.cpp"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 110.0,
		"where_history":
		[
			"/home/ghzmdr/Workspace/ENGINE2D/include",
			"/home/ghzmdr/Workspace/ENGINE2D/",
			"<project>"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			":",
			"runnig",
			"actualSpeed",
			"player.",
			"actualSpeed",
			"isRunning",
			"playerSpeed",
			"player.",
			"player",
			"true",
			"left",
			"range",
			"tileSize",
			"player",
			"ld",
			";\n",
			"widow",
			"const std::string&",
			"Main",
			"/\";\n",
			";\n",
			"get",
			"    \n",
			";}",
			"1.3",
			"texRect",
			")};",
			"left",
			"right",
			"\" ",
			"'",
			"Texture",
			".2",
			"- playerSpeed",
			"obj",
			"getGlobalBounds",
			"player",
			"getLocalBounds",
			"=",
			"false",
			"true",
			"+.5",
			"5",
			"(float)",
			"obj",
			"    {",
			"virtual",
			"}\n",
			"e:",
			" \n",
			");\n",
			"    \n",
			"hpp",
			"x(",
			"selected",
			";\n",
			"void",
			"World",
			"Zone",
			"zone",
			"Zone",
			"ZoneData",
			"left",
			"-1",
			"sf:Keyboard",
			"(int)",
			"canMoveRight",
			"Right",
			"<",
			">",
			"canMoveRLeft",
			"rDist",
			"lDist",
			"8",
			"9",
			"5",
			"3",
			"rOffset",
			"lOffset",
			"x",
			"speed",
			"5",
			".y",
			"w",
			"x",
			"checkCollision",
			"0",
			"x",
			"map2Layer",
			"-1",
			"player",
			"-1",
			"map2Layer",
			"player",
			"10",
			"3",
			"draw",
			"10",
			"    player",
			"Texture",
			"texture",
			"playerSprite",
			"worldView",
			"x",
			"LevelData",
			"mapRow",
			"map",
			"ld.getTileSize()",
			"map",
			"jsonMap",
			"2",
			"0",
			"0]",
			"1",
			"32",
			"level",
			"Level",
			"Bounds",
			"bounds",
			"dt",
			"32",
			"object",
			"0",
			"})\n",
			"'",
			"SYMBOL",
			"ignore",
			"mini"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"World"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/World.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4340,
						"regions":
						{
						},
						"selection":
						[
							[
								1554,
								1554
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "include/Player.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1002,
						"regions":
						{
						},
						"selection":
						[
							[
								779,
								779
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 319.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Player.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4541,
						"regions":
						{
						},
						"selection":
						[
							[
								4430,
								4430
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 714.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "include/Entity.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "include/World.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1122,
						"regions":
						{
						},
						"selection":
						[
							[
								634,
								634
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 204.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 205.0
	},
	"output.exec":
	{
		"height": 167.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "ENGINE2D.sublime-project",
	"replace":
	{
		"height": 112.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/Workspace/ENGINE2D/src/Airstrike.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 188.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
